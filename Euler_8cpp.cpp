/*
The four adjacent digits in the 1000 - digit number that have the greatest product are 9 ¡Á 9 ¡Á 8 ¡Á 9 = 5832.

73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450

Find the thirteen adjacent digits in the 1000 - digit number that have the greatest product.What is the value of this product ?
*/


#include<iostream>
#include<fstream>
#include<math.h>
#include<stdio.h>
#include<string>
#include<sstream>
using namespace std;

int main()
{

	int data[1001];
	long double m = 1.0;
	long double n =1.0;
	char num[1005];

	ifstream infile;
	infile.open("Euler8_1000.txt");
	if (!infile)
	{
		cout << "2" << endl;
		return 1;
	}
	for (size_t i = 0; i < 1003; i++)
	{
		infile>>num[i];
//		cout << i <<" "<< num[i] << endl;

	}

	infile.close();


	
	for (size_t i = 0; i < 1000; i++)
	{
		stringstream ss;
		ss << num[i+3];
		ss >> data[i];
		
	}
	for (size_t i = 0; i < 987; i++)
	{
		for (size_t j = i; j <= i +12; j++)
		{
/*			if (data[i] ==0)
			{
//				cout << i << endl;
				i = i + 10;
				break;
			}
*/
			m = m * data[j];	
		}
		if (m>=n)
		{
			n = m;
			cout << "the result is " << i << endl;
			cout << "the result is " << n << endl;
		}
		m = 1.0;
	}
	cout << "the result is " << n << endl;
	return 0;

}